/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projetinho.linguagem;


import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author Aluno
 */
public class ProjetoLeituras extends javax.swing.JFrame {
    
    Integer qtdLeituras = 0;
    
    Integer valueCPU;
    Integer somaCPU = 0;
    Integer maxCPU = 0;
    Integer minCPU = 0;
    Integer mediaCPU;
    
    Integer valueRAM;
    Integer somaRAM = 0;
    Integer maxRAM = 0;
    Integer minRAM = 0;
    Integer mediaRAM;
    
    Integer valueDISCO;
    Integer somaDISCO = 0;
    Integer maxDISCO = 0;
    Integer minDISCO = 0;
    Integer mediaDISCO;
    

    /**
     * Creates new form ProjetoLeituras
     */
    public ProjetoLeituras() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barCPU = new javax.swing.JProgressBar();
        btnFazerLeitura = new javax.swing.JButton();
        barRAM = new javax.swing.JProgressBar();
        txtCPU = new javax.swing.JLabel();
        txtRAM = new javax.swing.JLabel();
        barDISCO = new javax.swing.JProgressBar();
        txtDISCO = new javax.swing.JLabel();
        txtMaxCPU = new javax.swing.JLabel();
        txtMinCPU = new javax.swing.JLabel();
        txtMedCPU = new javax.swing.JLabel();
        txtMinRAM = new javax.swing.JLabel();
        txtMaxRAM = new javax.swing.JLabel();
        txtMedRAM = new javax.swing.JLabel();
        txtMinDISCO = new javax.swing.JLabel();
        txtMaxDISCO = new javax.swing.JLabel();
        txtMedDISCO = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        barCPU.setStringPainted(true);

        btnFazerLeitura.setText("Fazer leitura");
        btnFazerLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFazerLeituraActionPerformed(evt);
            }
        });

        barRAM.setStringPainted(true);

        txtCPU.setText("CPU");

        txtRAM.setText("RAM");

        barDISCO.setStringPainted(true);

        txtDISCO.setText("DISCO");

        txtMaxCPU.setText("MAX");

        txtMinCPU.setText("MIN");

        txtMedCPU.setText("MEDIA");

        txtMinRAM.setText("MIN");

        txtMaxRAM.setText("MAX");

        txtMedRAM.setText("MEDIA");

        txtMinDISCO.setText("MIN");

        txtMaxDISCO.setText("MAX");

        txtMedDISCO.setText("MEDIA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(txtRAM))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(txtDISCO)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMinCPU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMaxCPU))
                                    .addComponent(barCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedCPU))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(txtCPU)
                                .addGap(49, 49, 49)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMinRAM)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMinDISCO)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMaxDISCO))
                                    .addComponent(barDISCO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedDISCO)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaxRAM)
                            .addComponent(barRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMedRAM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(btnFazerLeitura)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMedCPU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaxCPU)
                    .addComponent(txtMinCPU))
                .addGap(24, 24, 24)
                .addComponent(txtRAM)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMedRAM)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnFazerLeitura)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMinRAM)
                    .addComponent(txtMaxRAM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(txtDISCO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barDISCO, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMedDISCO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMinDISCO)
                    .addComponent(txtMaxDISCO))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFazerLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFazerLeituraActionPerformed

            qtdLeituras += 1;
 
            valueCPU = ThreadLocalRandom.current().nextInt(4, 81);
            barCPU.setValue(valueCPU); 
            somaCPU += valueCPU;
            mediaCPU = somaCPU/qtdLeituras;
            
            valueRAM = ThreadLocalRandom.current().nextInt(1, 81);
            barRAM.setValue(valueRAM); 
            somaRAM += valueRAM;
            mediaRAM = somaRAM/qtdLeituras;
            
            valueDISCO = ThreadLocalRandom.current().nextInt(10, 91);
            barDISCO.setValue(valueDISCO); 
            somaDISCO += valueDISCO;
            mediaDISCO = somaDISCO/qtdLeituras;
            
            if (valueCPU>maxCPU) {
                maxCPU = valueCPU;
            }
            
            if (valueCPU<minCPU) {
                minCPU = valueCPU;
            }
            
            if (valueRAM>maxRAM) {
                maxRAM = valueRAM;
            }
            
            if (valueRAM<minRAM) {
                minRAM = valueRAM;
            }
            
            if (valueDISCO>maxDISCO) {
                maxDISCO = valueDISCO;
            }
            
            if (valueDISCO<minDISCO) {
                minDISCO = valueDISCO;
            }
            
            if (qtdLeituras == 1) {
                minCPU = maxCPU;
                minRAM = maxRAM;
                minDISCO = maxDISCO;
            }
            
            txtMaxCPU.setText(String.format("MAX= %d%%", maxCPU));
            txtMinCPU.setText(String.format("MIN= %d%%", minCPU));
            txtMedCPU.setText(String.format("MEDIA= %d%%", mediaCPU));
            
            txtMaxRAM.setText(String.format("MAX= %d%%", maxRAM));
            txtMinRAM.setText(String.format("MIN= %d%%", minRAM));
            txtMedRAM.setText(String.format("MEDIA= %d%%", mediaRAM));
            
            txtMaxDISCO.setText(String.format("MAX= %d%%", maxDISCO));
            txtMinDISCO.setText(String.format("MIN= %d%%", minDISCO));
            txtMedDISCO.setText(String.format("MEDIA= %d%%", mediaDISCO));
    }//GEN-LAST:event_btnFazerLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjetoLeituras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjetoLeituras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjetoLeituras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjetoLeituras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjetoLeituras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barCPU;
    private javax.swing.JProgressBar barDISCO;
    private javax.swing.JProgressBar barRAM;
    private javax.swing.JButton btnFazerLeitura;
    private javax.swing.JLabel txtCPU;
    private javax.swing.JLabel txtDISCO;
    private javax.swing.JLabel txtMaxCPU;
    private javax.swing.JLabel txtMaxDISCO;
    private javax.swing.JLabel txtMaxRAM;
    private javax.swing.JLabel txtMedCPU;
    private javax.swing.JLabel txtMedDISCO;
    private javax.swing.JLabel txtMedRAM;
    private javax.swing.JLabel txtMinCPU;
    private javax.swing.JLabel txtMinDISCO;
    private javax.swing.JLabel txtMinRAM;
    private javax.swing.JLabel txtRAM;
    // End of variables declaration//GEN-END:variables
}
